openapi: 3.1.0
info:
  version: 0.2.133
  title: Hail Services
  # termsOfService: TBC
  contact:
    name: Contact our support
    email: hail-team@broadinstitute.org
    url: https://www.hail.is/gethelp.html
  license:
    name: MIT Licence
    url: https://github.com/hail-is/hail/blob/main/LICENSE
  x-logo:
    url: 'https://hail.is/static/hail-logo-cropped-sm-opt.png'
    altText: Hail logo
  description: >
    Hail is a ....
    These services are for ....
externalDocs:
  description: "Find out how to create a GitHub repo for your OpenAPI definition."
  url: 'https://github.com/Redocly/create-openapi-repo'
tags:
  - name: Public Server Information
    description: "Operations for retrieving basic public information from the service."
  - name: Authenticated Server Information
    description: "Operations for retrieving information that require authentication."
  - name: Batches API v1Alpha
    description: "v1alpha batches API"
  - name: Batches API v2Alpha
    description: "v2alpha batches API"
  - name: Billing Projects
    description: "Operations for billing projects."
  - name: UI Support
x-tagGroups:
  - name: General
    tags:
      - 'Public Server Information'
      - 'Authenticated Server Information'
  - name: v1 API
    tags:
      - 'Batches API v1Alpha'
      - 'Billing Projects'
  - name: v2 API
    tags:
      - 'Batches API v2Alpha'
  - name: Internal
    tags:
      - UI Support
servers:
  - url: {{ base_url }}
    description: "Current Batch service. No risk of CORS issues."
  - url: https://batch.hail.is/
    description: "GCP Production Batch service. Beware CORS issues in swagger / browsers."
  - url: https://batch.azure.hail.is/
    description: "Azure Production Batch service. Beware CORS issues in swagger / browsers."
  - url: https://internal.hail.is/{devname}/batch/
    description: "Developer Batch service. Beware CORS issues in swagger / browsers."
    variables:
      devname:
        description: Developer environment name
paths:
  '/api/v1alpha/version':
    get:
      summary: "Version"
      description: "Get the version of the API."
      operationId: getVersion
      tags:
        - Public
      responses:
        '200':
          description: "Successfully retrieved the version of the API."
          content:
            string:
              example: "0.2.133"
  '/healthcheck':
    get:
      summary: "Healthcheck"
      description: "Check the health of the API."
      operationId: healthcheck
      tags:
        - Public
      responses:
        '200':
          description: "Successfully checked the health of the API."
  '/api/v1alpha/cloud':
    get:
      summary: "Cloud"
      description: "Get the cloud provider supported by this batch instance."
      operationId: getCloudProvider
      tags:
        - Public
      responses:
        '200':
          description: "Successfully retrieved the cloud provider supported."
          content:
            string:
              example: "gcp"
  '/api/v1alpha/supported_regions':
    get:
      summary: "Supported Regions"
      description: "Get the list of supported regions."
      operationId: getSupportedRegions
      tags:
        - Authenticated Information
      responses:
        '200':
          description: "Successfully retrieved the regions list."
          content:
            string:
              example: "TODO"
  '/api/v1alpha/batches':
    get:
      summary: "List batches"
      description: "List batches."
      operationId: getBatchesv1alpha
      tags:
        - Batches API v1Alpha
      responses:
        '200':
          description: "Successfully retrieved the batches."
          content:
            application/json:
              schema:
                type: object
  '/api/v1alpha/batches/{batch_id}':
    get:
      summary: "Get a batch"
      description: "Get a batch by ID."
      operationId: getBatchv1alpha
      tags:
        - Batches API v1Alpha
      parameters:
        - name: batch_id
          in: path
          description: "The ID of the batch."
          required: true
          schema:
            type: number
      responses:
        '200':
          description: "Successfully retrieved the batch."
          content:
            application/json:
              schema:
                type: object
  '/api/v1alpha/batches/{batch_id}/jobs':
    get:
      summary: "Get all jobs in a batch"
      description: "Get all jobs in a batch by ID."
      operationId: getJobsInBatchv1alpha
      tags:
        - Batches API v1Alpha
      parameters:
        - name: batch_id
          in: path
          description: "The ID of the batch."
          required: true
          schema:
            type: number
      responses:
        '200':
          description: "Successfully retrieved the jobs in the batch."
          content:
            application/json:
              schema:
                type: object
  '/api/v1alpha/batches/{batch_id}/job-groups':
    get:
      summary: "Get all job groups in a batch"
      description: "Get all job groups in a batch by ID."
      operationId: getJobGroupsInBatchv1alpha
      tags:
        - Batches API v1Alpha
      parameters:
        - name: batch_id
          in: path
          description: "The ID of the batch."
          required: true
          schema:
            type: number
      responses:
        '200':
          description: "Successfully retrieved the job groups in the batch."
          content:
            application/json:
              schema:
                type: object
  '/api/v1alpha/batches/{batch_id}/job-groups/{job_group_id}':
    get:
      summary: "Get a job group in a batch"
      description: "Get a job group in a batch by ID."
      operationId: getJobGroupInBatchv1alpha
      tags:
        - Batches API v1Alpha
      parameters:
        - name: batch_id
          in: path
          description: "The ID of the batch."
          required: true
          schema:
            type: number
        - name: job_group_id
          in: path
          description: "The ID of the job group."
          required: true
          schema:
            type: number
      responses:
        '200':
          description: "Successfully retrieved the job group in the batch."
          content:
            application/json:
              schema:
                type: object
  '/api/v1alpha/batches/{batch_id}/job-groups/{job_group_id}/jobs':
    get:
      summary: "Get all jobs in a job group"
      description: "Get all jobs in a job group by ID."
      operationId: getJobsInJobGroupv1alpha
      tags:
        - Batches API v1Alpha
      parameters:
        - name: batch_id
          in: path
          description: "The ID of the batch."
          required: true
          schema:
            type: number
        - name: job_group_id
          in: path
          description: "The ID of the job group."
          required: true
          schema:
            type: number
      responses:
        '200':
          description: "Successfully retrieved the jobs in the job group."
          content:
            application/json:
              schema:
                type: object
  '/api/v1alpha/batches/{batch_id}/job-groups/{job_group_id}/job-groups':
    get:
      summary: "Get all job groups in a job group"
      description: "Get all job groups in a job group by ID."
      operationId: getJobGroupsInJobGroupv1alpha
      tags:
        - Batches API v1Alpha
      parameters:
        - name: batch_id
          in: path
          description: "The ID of the batch."
          required: true
          schema:
            type: number
        - name: job_group_id
          in: path
          description: "The ID of the job group."
          required: true
          schema:
            type: number
      responses:
        '200':
          description: "Successfully retrieved the job groups in the job group."
          content:
            application/json:
              schema:
                type: object
  '/api/v1alpha/batches/{batch_id}/jobs/{job_id}':
    get:
      summary: "Get a job in a batch"
      description: "Get a job in a batch by ID."
      operationId: getJobInBatchv1alpha
      tags:
        - Batches API v1Alpha
      parameters:
        - name: batch_id
          in: path
          description: "The ID of the batch."
          required: true
          schema:
            type: number
        - name: job_id
          in: path
          description: "The ID of the job."
          required: true
          schema:
            type: number
      responses:
        '200':
          description: "Successfully retrieved the job in the batch."
          content:
            application/json:
              schema:
                type: object
  '/api/v1alpha/batches/{batch_id}/jobs/{job_id}/attempts':
    get:
      summary: "Get all attempts in a job"
      description: "Get all attempts in a job by ID."
      operationId: getAttemptsInJobv1alpha
      tags:
        - Batches API v1Alpha
      parameters:
        - name: batch_id
          in: path
          description: "The ID of the batch."
          required: true
          schema:
            type: number
        - name: job_id
          in: path
          description: "The ID of the job."
          required: true
          schema:
            type: number
      responses:
        '200':
          description: "Successfully retrieved the attempts in the job."
          content:
            application/json:
              schema:
                type: object
  '/api/v1alpha/batches/{batch_id}/jobs/{job_id}/log':
    get:
      summary: "Get job log"
      description: "Get the log of a job by ID."
      operationId: getLogInJobv1alpha
      tags:
        - Batches API v1Alpha
      parameters:
        - name: batch_id
          in: path
          description: "The ID of the batch."
          required: true
          schema:
            type: number
        - name: job_id
          in: path
          description: "The ID of the job."
          required: true
          schema:
            type: number
      responses:
        '200':
          description: "Successfully retrieved the log of the job."
          content:
            application/json:
              schema:
                type: object
  '/api/v1alpha/batches/{batch_id}/jobs/{job_id}/log/{container}':
    get:
      summary: "Get job log by container"
      description: "Get the log of a job from a specific container."
      operationId: getLogInJobContainerV1alpha
      tags:
        - Batches API v1Alpha
      parameters:
        - name: batch_id
          in: path
          description: "The ID of the batch."
          required: true
          schema:
            type: number
        - name: job_id
          in: path
          description: "The ID of the job."
          required: true
          schema:
            type: number
        - name: container
          in: path
          description: "The name of the container."
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Successfully retrieved the log of the job in the container."
          content:
            application/json:
              schema:
                type: object
  '/api/v1alpha/batches/{batch_id}/jobs/{job_id}/resources_usage':
    get:
      summary: "Get job resource usage"
      description: "Get the resources usage of a job."
      operationId: getResourcesUsageInJobv1alpha
      tags:
        - Batches API v1Alpha
      parameters:
        - name: batch_id
          in: path
          description: "The ID of the batch."
          required: true
          schema:
            type: number
        - name: job_id
          in: path
          description: "The ID of the job."
          required: true
          schema:
            type: number
      responses:
        '200':
          description: "Successfully retrieved the resources usage of the job."
          content:
            application/json:
              schema:
                type: object
  '/api/v2alpha/batches':
    get:
      summary: "List batches"
      description: "List batches."
      operationId: getBatchesv2alpha
      tags:
        - Batches API v2Alpha
      responses:
        '200':
          description: "Successfully retrieved the batches."
          content:
            application/json:
              schema:
                type: object
  '/api/v2alpha/batches/{batch_id}/jobs':
    get:
      summary: "List jobs in a batch"
      description: "List jobs in a batch by batch ID."
      operationId: getJobsInBatchv2alpha
      tags:
        - Batches API v2Alpha
      parameters:
        - name: batch_id
          in: path
          description: "The ID of the batch."
          required: true
          schema:
            type: number
      responses:
        '200':
          description: "Successfully retrieved the jobs in the batch."
          content:
            application/json:
              schema:
                type: object
  '/api/v2alpha/batches/{batch_id}/job-groups/{job_group_id}/jobs':
    get:
      summary: "List jobs in a job group"
      description: "List jobs in a job group by job group ID."
      operationId: getJobsInJobGroupv2alpha
      tags:
        - Batches API v2Alpha
      parameters:
        - name: batch_id
          in: path
          description: "The ID of the batch."
          required: true
          schema:
            type: number
        - name: job_group_id
          in: path
          description: "The ID of the job group."
          required: true
          schema:
            type: number
      responses:
        '200':
          description: "Successfully retrieved the jobs in the job group."
          content:
            application/json:
              schema:
                type: object
  '/api/v1alpha/billing_projects':
    get:
      summary: "List billing projects"
      description: "List billing projects."
      operationId: getBillingProjects
      tags:
        - Billing Projects
      responses:
        '200':
          description: "Successfully retrieved the billing projects."
          content:
            application/json:
              schema:
                type: object
  '/api/v1alpha/billing_projects/{billing_project}':
    get:
      summary: "Get a billing project"
      description: "Get a billing project by ID."
      operationId: getBillingProject
      tags:
        - Billing Projects
      parameters:
        - name: billing_project
          in: path
          description: "The ID of the billing project."
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Successfully retrieved the billing project."
          content:
            application/json:
              schema:
                type: object
  '/batches':
    get:
      summary: "Batches page (UI)"
      description: "Render the batches page, or (dev only) its supporting jinja context"
      operationId: getBatchesUI
      tags:
        - UI Support
      parameters:
        - name: x-hail-return-jinja-context
          in: header
          description: "Do not render, and instead return the jinja context json."
          required: false
          schema:
            type: boolean
            default: false
            example: true
      responses:
        '200':
          description: "Successfully retrieved the batches."
          content:
            application/json:
              schema:
                type: object
  '/batches/{batch_id}':
    get:
      summary: "Batch page (UI)"
      description: "Render the batch page, or (dev only) its supporting jinja context"
      operationId: getBatchUI
      tags:
        - UI Support
      parameters:
        - name: batch_id
          in: path
          description: "The ID of the batch."
          required: true
          schema:
            type: number
        - name: x-hail-return-jinja-context
          in: header
          description: "Do not render, and instead return the jinja context json."
          required: false
          schema:
            type: boolean
            default: false
            example: true
      responses:
        '200':
          description: "Successfully retrieved the batch."
          content:
            application/json:
              schema:
                type: object
  '/batches/{batch_id}/jobs/{job_id}':
    get:
      summary: "Job page (UI)"
      description: "Render the job page, or (dev only) its supporting jinja context"
      operationId: getJobUI
      tags:
        - UI Support
      parameters:
        - name: batch_id
          in: path
          description: "The ID of the batch."
          required: true
          schema:
            type: number
        - name: job_id
          in: path
          description: "The ID of the job."
          required: true
          schema:
            type: number
        - name: x-hail-return-jinja-context
          in: header
          description: "Do not render, and instead return the jinja context json."
          required: false
          schema:
            type: boolean
            default: false
            example: true
      responses:
        '200':
          description: "Successfully retrieved the job."
          content:
            application/json:
              schema:
                type: object
  '/batches/{batch_id}/jobs/{job_id}/jvm_profile':
    get:
      summary: "Job JVM profile page (UI)"
      description: "Render the job JVM profile page, or (dev only) its supporting jinja context"
      operationId: getJobJVMProfileUI
      tags:
        - UI Support
      parameters:
        - name: batch_id
          in: path
          description: "The ID of the batch."
          required: true
          schema:
            type: number
        - name: job_id
          in: path
          description: "The ID of the job."
          required: true
          schema:
            type: number
        - name: x-hail-return-jinja-context
          in: header
          description: "Do not render, and instead return the jinja context json."
          required: false
          schema:
            type: boolean
            default: false
            example: true
      responses:
        '200':
          description: "Successfully retrieved the job JVM profile."
          content:
            application/json:
              schema:
                type: object
  '/batches/{batch_id}/jobs/{job_id}/log/{container}':
    get:
      summary: "Job log page (UI)"
      description: "Render the job log page, or (dev only) its supporting jinja context"
      operationId: getJobLogUI
      tags:
        - UI Support
      parameters:
        - name: batch_id
          in: path
          description: "The ID of the batch."
          required: true
          schema:
            type: number
        - name: job_id
          in: path
          description: "The ID of the job."
          required: true
          schema:
            type: number
        - name: container
          in: path
          description: "The name of the container."
          required: true
          schema:
            type: string
        - name: x-hail-return-jinja-context
          in: header
          description: "Do not render, and instead return the jinja context json."
          required: false
          schema:
            type: boolean
            default: false
            example: true
      responses:
        '200':
          description: "Successfully retrieved the job log."
          content:
            application/json:
              schema:
                type: object
  '/billing':
    get:
      summary: "Billing page (UI)"
      description: "Render the billing page, or (dev only) its supporting jinja context"
      operationId: getBillingUI
      tags:
        - UI Support
      parameters:
        - name: x-hail-return-jinja-context
          in: header
          description: "Do not render, and instead return the jinja context json."
          required: false
          schema:
            type: boolean
            default: false
            example: true
      responses:
        '200':
          description: "Successfully retrieved the billing page."
          content:
            application/json:
              schema:
                type: object
  '/billing_limits':
    get:
      summary: "Billing limits page (UI)"
      description: "Render the billing limits page, or (dev only) its supporting jinja context"
      operationId: getBillingLimitsUI
      tags:
        - UI Support
      parameters:
        - name: x-hail-return-jinja-context
          in: header
          description: "Do not render, and instead return the jinja context json."
          required: false
          schema:
            type: boolean
            default: false
            example: true
      responses:
        '200':
          description: "Successfully retrieved the billing limits page."
          content:
            application/json:
              schema:
                type: object
  '/billing_projects':
    get:
      summary: "Billing projects page (UI)"
      description: "Render the billing projects page, or (dev only) its supporting jinja context"
      operationId: getBillingProjectsUI
      tags:
        - UI Support
      parameters:
        - name: x-hail-return-jinja-context
          in: header
          description: "Do not render, and instead return the jinja context json."
          required: false
          schema:
            type: boolean
            default: false
            example: true
      responses:
        '200':
          description: "Successfully retrieved the billing projects page."
          content:
            application/json:
              schema:
                type: object
  '/openapi.yaml':
    get:
      summary: "OpenAPI spec"
      description: "Render the OpenAPI spec, or (dev only) its supporting jinja context"
      operationId: getOpenAPI
      tags:
        - UI Support
      parameters:
        - name: x-hail-return-jinja-context
          in: header
          description: "Do not render, and instead return the jinja context json."
          required: false
          schema:
            type: boolean
            default: false
            example: true
      responses:
        '200':
          description: "Successfully retrieved the OpenAPI spec."
          content:
            application/json:
              schema:
                type: object
  '/swagger':
    get:
      summary: "Swagger UI"
      description: "Render the swagger UI page, or (dev only) its supporting jinja context"
      operationId: getOpenAPI
      tags:
        - UI Support
      parameters:
        - name: x-hail-return-jinja-context
          in: header
          description: "Do not render, and instead return the jinja context json."
          required: false
          schema:
            type: boolean
            default: false
            example: true
      responses:
        '200':
          description: "Successfully retrieved the Swagger UI"
          content:
            application/json:
              schema:
                type: object

#components:
#  securitySchemes:
#    main_auth:
#      description: "GCP production hail login (hail.is and internal.hail.is)"
#      type: oauth2
#      flows:
#        implicit:
#          authorizationUrl: {{ auth_base_url }}/login
#          clientId: '842871226259-4oshjtt0j9n88k4j8a601gsv64mc7eql.apps.googleusercontent.com'
#          redirectUrl: {{ base_url }}/swagger
#          scopes:
#            'read:users': read user info
#            'write:users': modify or remove users
#    api_key:
#      description: "Use a token from another oauth login session. Not recommended!"
#      type: apiKey
#      in: header
#      name: Authorization
#    basic_auth:
#      type: http
#      scheme: basic
#webhooks:
#  # TODO: Github -> CI webhooks?
#  userInfo:
#    post:
#      summary: New user webhook
#      description: "Information about a new user in the system."
#      operationId: userInfo
#      tags:
#        - Info
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: 'components/schemas/User.yaml'
#      responses:
#        '200':
#          description: "Successfully retrieved information about a new user."
#      security:
#        - api_key: []
